#changing the server port
server.port=8088

spring.application.name=student-service

#db specific properties
spring.datasource.url=jdbc:mysql://${DB_HOST:localhost}:${DB_PORT:3306}/${DB_NAME:microStudent}
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.username=${DB_USERNAME:root}
spring.datasource.password=${DB_PASSWORD:King@32911}

spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect

#ORM s/w specific properties
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true

#For handling exception in validation
spring.mvc.throw-exception-if-no-handler-found=true
spring.web.resources.add-mappings=false

#For Eureka
#Whenever we run/deploy this course unit it will register itself to given url
eureka.client.service-url.defaultZone: http://localhost:8085/eureka

#All these properties are for circuit breaker
resilience4j.circuitbreaker.configs.shared.register-health-indicator=true
#count based pattern
resilience4j.circuitbreaker.configs.shared.sliding-window-type=COUNT_BASED
#Taking care that after 5 number of requests we have to open/close the circuit
resilience4j.circuitbreaker.configs.shared.sliding-window-size=5
#Means 40% of the above 5 requests is failing or timed out then we have to make circuit breaker open
resilience4j.circuitbreaker.configs.shared.failure-rate-threshold=40
resilience4j.circuitbreaker.configs.shared.slow-call-rate-threshold=40
#When circuit breaker goes to half open state. In that case we make 1 request to check that given microservice is still down or not
resilience4j.circuitbreaker.configs.shared.permitted-number-of-calls-in-half-open-state=1
#In half open state we will wait for 10 sec to make another call
resilience4j.circuitbreaker.configs.shared.max-wait-duration-in-half-open-state=10s
#When circuit breaker will be in open state. In that case we have to wait for 10 sec so that CB goes to half open or closed state
resilience4j.circuitbreaker.configs.shared.wait-duration-in-open-state=10s
#when response is taking more than 2 seconds then we will consider it as a failure
resilience4j.circuitbreaker.configs.shared.slow-call-duration-threshold=2s
resilience4j.circuitbreaker.configs.shared.writable-stack-trace-enabled=true
resilience4j.circuitbreaker.configs.shared.automatic-transition-from-open-to-half-open-enabled=true

#Showing we are using shared based configuration
resilience4j.circuitbreaker.instances.circuitBreaker.base-config=shared

#To make TraceId and SpanId display in a log file
logging.pattern.level=%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]

#Try this as well
#enable.zipkin=true

#Tell the student service that we have to fetch the config files from config server
spring.config.import: optional:configserver:http://localhost:8086

// Otherwise it will run on default
spring.profiles.active=dev

management.endpoints.web.exposure.include=*